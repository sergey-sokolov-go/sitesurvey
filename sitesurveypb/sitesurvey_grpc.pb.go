// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package sitesurveypb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SurveyClient is the client API for Survey service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SurveyClient interface {
	SendSurvey(ctx context.Context, in *SurveyRequest, opts ...grpc.CallOption) (*SurveyReply, error)
}

type surveyClient struct {
	cc grpc.ClientConnInterface
}

func NewSurveyClient(cc grpc.ClientConnInterface) SurveyClient {
	return &surveyClient{cc}
}

func (c *surveyClient) SendSurvey(ctx context.Context, in *SurveyRequest, opts ...grpc.CallOption) (*SurveyReply, error) {
	out := new(SurveyReply)
	err := c.cc.Invoke(ctx, "/sitesurvey.Survey/SendSurvey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SurveyServer is the server API for Survey service.
// All implementations must embed UnimplementedSurveyServer
// for forward compatibility
type SurveyServer interface {
	SendSurvey(context.Context, *SurveyRequest) (*SurveyReply, error)
	mustEmbedUnimplementedSurveyServer()
}

// UnimplementedSurveyServer must be embedded to have forward compatible implementations.
type UnimplementedSurveyServer struct {
}

func (UnimplementedSurveyServer) SendSurvey(context.Context, *SurveyRequest) (*SurveyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSurvey not implemented")
}
func (UnimplementedSurveyServer) mustEmbedUnimplementedSurveyServer() {}

// UnsafeSurveyServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SurveyServer will
// result in compilation errors.
type UnsafeSurveyServer interface {
	mustEmbedUnimplementedSurveyServer()
}

func RegisterSurveyServer(s grpc.ServiceRegistrar, srv SurveyServer) {
	s.RegisterService(&Survey_ServiceDesc, srv)
}

func _Survey_SendSurvey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SurveyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).SendSurvey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sitesurvey.Survey/SendSurvey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).SendSurvey(ctx, req.(*SurveyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Survey_ServiceDesc is the grpc.ServiceDesc for Survey service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Survey_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sitesurvey.Survey",
	HandlerType: (*SurveyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSurvey",
			Handler:    _Survey_SendSurvey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sitesurveypb/sitesurvey.proto",
}
